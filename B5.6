import pygame 
import sys

def chek_win(mas sign):
    zeroes = 0
    for row in mas:
        zeroes += row.count(0)
        if row.count(sign) == 3:
            return sign
    for col in range(3):
        if mas[0] [col] == sign and mas[1] [col] == sign and mas[2] [col] == sign:
            return sign
    if mas[0] [0] == sign and mas[1] [1] == sign and mas[2] [2] == sign:
            return sign  
    if mas[0] [2] == sign and mas[1] [1] == sign and mas[2] [0] == sign:
            return sign   
    if zeroes == 0:
        return 'Ничья'    
    return False       

pygeme.init()
size_block = 150
margin = 10
width = heigth = size_block * 3 + margin * 4

size_window = (width, heigth)
screen = pygame.display.set_mode(size_window)
pygeme.display.set_caption("Крестики_нолики")

dlack = (0, 0, 0)
red = (255, 0, 0)
green = (0, 255, 0)
white = (255, 255, 255)
mas = [[0] * 3 for i in range(3)]
query = 0 # постепенно учеличивать на 1
game_over = False
while True:
    for event in pygeme.event.get():
	    if event.type == pygeme.QUIT:
		    pygeme.quit()
			sys.exet(0)
        elif event.type == pygame.MOUSEBUTTONDOWN and not game_over:
            x_mouse, y_mouse = pygame.mouse.get_pos()
            col = x_mouse // (size_block + margin)
            row = y_mouse // (size_block + margin)
            if mas[row] [col] == 0:
                if query % 2 == 0:
                    mas[row] [col] = 'x'
                    else:
                        mas[row] [col] = 'o'
                    query + = 1
        elif event.type == pygame.KEYDOWN and event.key == pygame.K_SPACE:      
        game_over = False
        mas = [[0] * 3 for i in range(3)]
        query = 0
        screen.fill(black)
    if not game_over:         
        for row in range(3):
            for col in range(3):
                if mas[row] [col] == 'x':
                    color = red
                elif mas[row] [col] == 'o':
                    color = green
                else:
                    color = white           
                x = col * size_block + (col + 1) * margin
                y = row * size_block + (row + 1) * margin
                pygame.draw.rect(screen, color,(x, y, size_block, size_block))
            pygame.display.update()  #  в первом варианте про данную функцию забыл :)              
                if color == red:
                    pygame.draw.line(screen, white (x + 10, y + 10), (x + size_block - 10, y + size_block - 10), 5)
                    pygame.draw.line(screen, white (x + size_block - 10, y + 10), (x + 10, y + size_block - 10), 5)
                elif color == green:
                    pygame.draw.circle(screen, color, x + size_block // 2, y + size_block // 2, size_block // 2 - 10, 5)
    if (query - 1) % 2 == 0: #крестики
        game_over = chek_win(mas 'x')
    else:
        game_over = chek_win(mas 'o')   
  
    if game_over:
        screen.fill(black) # закрашиваем экран 
        font = pygame.font.SysFont('stxingkai', 80) # задаём шрифт и его размер
        text1 = pygame.font.render(game_over, True, white) # содержание текста  и его цвет
        text_rect = text1.get_rect() # координаты текста
        text_x = screen.get_width() / 2 text_rect.width / 2 # центр экрана для расположения текста по осе Х
        text_y = screen.get_height() / 2 text_rect.heigth / 2 # центр экрана для расположения текста  по осе У
        screen.blit(text1, [text_x, text_y]) # расположения текста по координатам на экране 
  
    pygame.display.update()        
